openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/accounts/:
    get:
      operationId: api_accounts_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
    post:
      operationId: api_accounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/courses/:
    get:
      operationId: api_courses_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoursesSerizalizer'
          description: ''
    post:
      operationId: api_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesSerizalizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoursesSerizalizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoursesSerizalizer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesSerizalizer'
          description: ''
  /api/courses/{course_id}/:
    get:
      operationId: api_courses_retrieve
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesSerizalizer'
          description: ''
    put:
      operationId: api_courses_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesSerizalizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoursesSerizalizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoursesSerizalizer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesSerizalizer'
          description: ''
    patch:
      operationId: api_courses_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoursesSerizalizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoursesSerizalizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoursesSerizalizer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesSerizalizer'
          description: ''
    delete:
      operationId: api_courses_destroy
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{course_id}/contents/:
    get:
      operationId: api_courses_contents_list
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContentSerizalizer'
          description: ''
    post:
      operationId: api_courses_contents_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentSerizalizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentSerizalizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentSerizalizer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSerizalizer'
          description: ''
  /api/courses/{course_id}/contents/{content_id}/:
    get:
      operationId: api_courses_contents_retrieve
      parameters:
      - in: path
        name: content_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content.
        required: true
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSerizalizer'
          description: ''
    put:
      operationId: api_courses_contents_update
      parameters:
      - in: path
        name: content_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content.
        required: true
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentSerizalizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentSerizalizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentSerizalizer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSerizalizer'
          description: ''
    patch:
      operationId: api_courses_contents_partial_update
      parameters:
      - in: path
        name: content_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content.
        required: true
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContentSerizalizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContentSerizalizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContentSerizalizer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSerizalizer'
          description: ''
    delete:
      operationId: api_courses_contents_destroy
      parameters:
      - in: path
        name: content_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this content.
        required: true
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{course_id}/students/:
    get:
      operationId: api_courses_students_retrieve
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePatch'
          description: ''
    put:
      operationId: api_courses_students_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursePatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoursePatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoursePatch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePatch'
          description: ''
    patch:
      operationId: api_courses_students_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoursePatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoursePatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoursePatch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePatch'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_superuser:
          type: boolean
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - id
      - password
      - username
    ContentSerizalizer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        content:
          type: string
        video_url:
          type: string
          nullable: true
          maxLength: 200
      required:
      - content
      - id
      - name
    CoursePatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        students_courses:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseSerizalizer'
      required:
      - id
      - name
      - students_courses
    CoursesSerizalizer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/CoursesSerizalizerStatusEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        instructor:
          type: string
          format: uuid
          nullable: true
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ContentSerizalizer'
          readOnly: true
        students_courses:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseSerizalizer'
          readOnly: true
      required:
      - contents
      - end_date
      - id
      - name
      - start_date
      - students_courses
    CoursesSerizalizerStatusEnum:
      enum:
      - not started
      - in progress
      - finished
      type: string
      description: |-
        * `not started` - Not Started
        * `in progress` - In Progress
        * `finished` - Finished
    PatchedContentSerizalizer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        content:
          type: string
        video_url:
          type: string
          nullable: true
          maxLength: 200
    PatchedCoursePatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        students_courses:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseSerizalizer'
    PatchedCoursesSerizalizer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/CoursesSerizalizerStatusEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        instructor:
          type: string
          format: uuid
          nullable: true
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ContentSerizalizer'
          readOnly: true
        students_courses:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseSerizalizer'
          readOnly: true
    StudentCourseSerizalizer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StudentCourseSerizalizerStatusEnum'
        student_id:
          type: string
          format: uuid
          readOnly: true
        student_username:
          type: string
          readOnly: true
          maxLength: 150
        student_email:
          type: string
          maxLength: 150
      required:
      - id
      - student_email
      - student_id
      - student_username
    StudentCourseSerizalizerStatusEnum:
      enum:
      - pending
      - accepted
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
